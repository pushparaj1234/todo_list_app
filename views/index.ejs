<!DOCTYPE html>
<html lang="en">
<head>
    
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="sweetalert2.all.min.js"></script>
    <title>Todo List</title>
    <style>
       *
{
    box-sizing: border-box;
    padding: 0%;
    font-family: Verdana, Geneva, Tahoma, sans-serif;

}
body{
    background-color:bisque;
}
.container{
    background-color: rgba(0, 0, 0, 0.829);
    max-width: 1000px;
    color: aliceblue;
    align-items: center;
    margin: 1em auto;
    border-radius: 0.5em;
    padding: 2em 1.5em;
}

input{
    margin-top: 20px;
    width: 60%;
    border-radius: 0.5 rem;
    padding: 15px;
    margin-bottom: .75em;
    color: rgb(255, 122, 5);
    font-weight: bold;
}
input[type=text]{
    margin-top: 20px;
    width: 80%;
    border-radius: 0.5 rem;
    padding: 15px;
    margin-bottom: .75em;
    color: rgb(255, 122, 5);
    font-weight: bold;
}
input[type=radio]
{
    margin: 0;
    width: 20px;
    height: 15px;
    margin-bottom: 1em;
    accent-color:rgb(246, 114, 12);
}
input[type=checkbox]
{
    margin: 5px;
    width: 30px;
    height: 30px;
  
    margin-bottom: 1em;
    accent-color:rgb(246, 114, 12);
}
.inputsection
{
    margin: 0.75em 0em;
}
#invalid
{
    color: red;
}
input:focus{
    border: 0.3em solid rgb(86, 241, 13);
}
.radios{
    margin-top:1em;
    display: block;
    margin-bottom: 1em;
}
h1{
 text-align: center;
 font-weight: bold;
    
}
.hrr{
border-top: 1px dashed red;
}
.strikethrough {
  text-decoration: line-through;
}
button
{
    margin-left: 1em;
    width: 15%;
    border-radius: 3px;
    padding: 10px;
   
    font-weight: 200px;
    background-color: peru;
    font-weight: bolder;
}
.menu {
    display: flex;
    justify-content: space-between;
    margin-bottom: 1em;
  }


    </style>
</head>
<body>
    
    <div class="container">
      <h1>Task Management</h1><br>
      <div class="menu">
        <button onclick="location.href='/c'">Go to Completed Tasks</button>

        <button onclick="location.href='/c1'">Go to Pending Tasks</button>
      </div>
      <br>
        <form action="/" method="POST" autocomplete="off" >
            <input type="text" name="todovalue" placeholder="add your task.."  required>
            <button type="submit" onclick="fun()">Add Task</button>
            
        </form>
        <div id="container">
            <% if(data) { %>
              <% data.forEach((todovalue, index) => { %>
                <div class="container">
                  <input type="email" name="fetch" class="fetch <%= todovalue.completed ? 'strikethrough' : '' %>" id="fetch_<%= index %>" readonly value="<%= todovalue.todo %>">
                  <button type="submit" class="todo-delete <%= todovalue.id %>">delete</button>
                  <button type="submit" class="todo-update">update</button>
                  <input type="checkbox" name="complete" class="complete" id="complete_<%= index %>">
                  <!-- <button type="submit" name="complete" class="complete" id="nutt_<%= index %>">x</button> -->
                </div>
              <% }) %>
            <% } %>
          </div>
                    
        <script>
          document.querySelectorAll('.complete').forEach(function(checkbox) {
          checkbox.addEventListener('change', function() {
            event.preventDefault();
            var input = this.parentElement.querySelector('.fetch');
            var id = this.parentElement.querySelector('.todo-delete').classList[1];
    
            if (this.checked) {
              // input.classList.add('strikethrough');
              // Send a PUT request to update the completed value in the database
              
              fetch('/comp/' + id, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({ todov: input.value })
              })
              
              .then(response => {
                if (!response.ok) {
                  throw new Error('Error updating todo');
                }
                console.log('Todo updated successfully');
              })
              .catch(error => {
                console.log(error);
              });
              
            } 
            else{
              fetch('/comp/' + id, {
                method: 'DELETE'
              })
              
              .then(response => {
                if (!response.ok) {
                  throw new Error('Error updating todo');
                }
                
                console.log('Todo updated successfully');
              })
              .catch(error => {
                console.log(error);
              });
            }
          });
        });
        
        
                </script>
        <script>
  document.querySelectorAll('.complete').forEach(function(checkbox) {
  checkbox.addEventListener('change', function() {
    event.preventDefault();
    var input = this.parentElement.querySelector('.fetch');
    var id = this.parentElement.querySelector('.todo-delete').classList[1];

    if (this.checked) {
      input.classList.add('strikethrough');
      // Send a PUT request to update the completed value in the database
      fetch('/todos/' + id, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ completed: true })
      })
      
      .then(response => {
        if (!response.ok) {
          throw new Error('Error updating todo');
        }
        swal.fire({
      text: "Task completed",
      timer: 1000,
      icon: "success",
      showConfirmButton: false,
    });
        
        
        console.log('Todo updated successfully');
      })
      .catch(error => {
        console.log(error);
      });
      
    } else {
      input.classList.remove('strikethrough');
      fetch('/todos/' + id, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ completed: false })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error updating todo');
        }
        swal.fire({
      text: "Task not completed",
      timer: 1000,
      icon: "error",
      showConfirmButton: false,
    });
        
        console.log('Todo updated successfully');
      })
      .catch(error => {
        console.log(error);
      });
    }
  });
});


        </script>
        
        <script>
    document.querySelectorAll('.todo-update').forEach(function(button) {
  button.addEventListener('click', function() {
    event.preventDefault();
    var input = this.parentElement.querySelector('.fetch');
    var id = this.parentElement.querySelector('.todo-delete').classList[1];
    var newTodo = prompt('Enter new todo:', input.value);

    if (newTodo) {
      input.value = newTodo;
      
      fetch('/todos/' + id, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ todos: newTodo })
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error updating todo');
        }
        console.log('Todo updated successfully');
      })
      .catch(error => {
        console.log(error);
      });
    }
  });
});

        </script>  
    <script>
     const deletebutton1=document.querySelectorAll(".todo-delete")
        deletebutton1.forEach((button,i)=>{
            button.addEventListener("click",()=>{
              
           const endpoint=`/${button.classList[1]}`
          
         fetch(endpoint,{
            method:"DELETE"
         })
      
         swal.fire({
      text: "Task deleted",
      timer: 1000,
      icon: "error",
      showConfirmButton: false,
      
    });
    setTimeout(() => {
      window.location.href = '/';
    }, 1000);
 
            })
            
        })
      
    </script>
    <script>
      function fun()
      {
        swal.fire({
      text: "Task added",
      timer: 2000,
      icon: "success",
      showConfirmButton: false,
    });
      }
    </script>
</body>
</html>